project('llvm', ['cpp'])

cpp = meson.get_compiler('cpp')

_deps = []
_search = '/usr/x86_64-w64-mingw32/lib'
foreach d : ['LLVMWindowsManifest', 'LLVMXRay', 'LLVMLibDriver', 'LLVMDlltoolDriver', 'LLVMCoverage', 'LLVMLineEditor', 'LLVMXCoreDisassembler', 'LLVMXCoreCodeGen', 'LLVMXCoreDesc', 'LLVMXCoreInfo', 'LLVMX86TargetMCA', 'LLVMX86Disassembler', 'LLVMX86AsmParser', 'LLVMX86CodeGen', 'LLVMX86Desc', 'LLVMX86Info', 'LLVMWebAssemblyDisassembler', 'LLVMWebAssemblyAsmParser', 'LLVMWebAssemblyCodeGen', 'LLVMWebAssemblyDesc', 'LLVMWebAssemblyUtils', 'LLVMWebAssemblyInfo', 'LLVMVEDisassembler', 'LLVMVEAsmParser', 'LLVMVECodeGen', 'LLVMVEDesc', 'LLVMVEInfo', 'LLVMSystemZDisassembler', 'LLVMSystemZAsmParser', 'LLVMSystemZCodeGen', 'LLVMSystemZDesc', 'LLVMSystemZInfo', 'LLVMSparcDisassembler', 'LLVMSparcAsmParser', 'LLVMSparcCodeGen', 'LLVMSparcDesc', 'LLVMSparcInfo', 'LLVMRISCVDisassembler', 'LLVMRISCVAsmParser', 'LLVMRISCVCodeGen', 'LLVMRISCVDesc', 'LLVMRISCVInfo', 'LLVMPowerPCDisassembler', 'LLVMPowerPCAsmParser', 'LLVMPowerPCCodeGen', 'LLVMPowerPCDesc', 'LLVMPowerPCInfo', 'LLVMNVPTXCodeGen', 'LLVMNVPTXDesc', 'LLVMNVPTXInfo', 'LLVMMSP430Disassembler', 'LLVMMSP430AsmParser', 'LLVMMSP430CodeGen', 'LLVMMSP430Desc', 'LLVMMSP430Info', 'LLVMMipsDisassembler', 'LLVMMipsAsmParser', 'LLVMMipsCodeGen', 'LLVMMipsDesc', 'LLVMMipsInfo', 'LLVMLanaiDisassembler', 'LLVMLanaiCodeGen', 'LLVMLanaiAsmParser', 'LLVMLanaiDesc', 'LLVMLanaiInfo', 'LLVMHexagonDisassembler', 'LLVMHexagonCodeGen', 'LLVMHexagonAsmParser', 'LLVMHexagonDesc', 'LLVMHexagonInfo', 'LLVMBPFDisassembler', 'LLVMBPFAsmParser', 'LLVMBPFCodeGen', 'LLVMBPFDesc', 'LLVMBPFInfo', 'LLVMAVRDisassembler', 'LLVMAVRAsmParser', 'LLVMAVRCodeGen', 'LLVMAVRDesc', 'LLVMAVRInfo', 'LLVMARMDisassembler', 'LLVMARMAsmParser', 'LLVMARMCodeGen', 'LLVMARMDesc', 'LLVMARMUtils', 'LLVMARMInfo', 'LLVMAMDGPUTargetMCA', 'LLVMAMDGPUDisassembler', 'LLVMAMDGPUAsmParser', 'LLVMAMDGPUCodeGen', 'LLVMAMDGPUDesc', 'LLVMAMDGPUUtils', 'LLVMAMDGPUInfo', 'LLVMAArch64Disassembler', 'LLVMAArch64AsmParser', 'LLVMAArch64CodeGen', 'LLVMAArch64Desc', 'LLVMAArch64Utils', 'LLVMAArch64Info', 'LLVMOrcJIT', 'LLVMWindowsDriver', 'LLVMMCJIT', 'LLVMJITLink', 'LLVMInterpreter', 'LLVMExecutionEngine', 'LLVMRuntimeDyld', 'LLVMOrcTargetProcess', 'LLVMOrcShared', 'LLVMDWP', 'LLVMDebugInfoGSYM', 'LLVMOption', 'LLVMObjectYAML', 'LLVMObjCopy', 'LLVMMCA', 'LLVMMCDisassembler', 'LLVMLTO', 'LLVMPasses', 'LLVMCFGuard', 'LLVMCoroutines', 'LLVMObjCARCOpts', 'LLVMipo', 'LLVMVectorize', 'LLVMLinker', 'LLVMInstrumentation', 'LLVMFrontendOpenMP', 'LLVMFrontendOpenACC', 'LLVMExtensions', 'LLVMDWARFLinker', 'LLVMGlobalISel', 'LLVMMIRParser', 'LLVMAsmPrinter', 'LLVMSelectionDAG', 'LLVMCodeGen', 'LLVMInterfaceStub', 'LLVMFileCheck', 'LLVMFuzzMutate', 'LLVMTarget', 'LLVMScalarOpts', 'LLVMInstCombine', 'LLVMAggressiveInstCombine', 'LLVMTransformUtils', 'LLVMBitWriter', 'LLVMAnalysis', 'LLVMProfileData', 'LLVMSymbolize', 'LLVMDebugInfoPDB', 'LLVMDebugInfoMSF', 'LLVMDebugInfoDWARF', 'LLVMObject', 'LLVMTextAPI', 'LLVMMCParser', 'LLVMIRReader', 'LLVMAsmParser', 'LLVMMC', 'LLVMDebugInfoCodeView', 'LLVMBitReader', 'LLVMFuzzerCLI', 'LLVMCore', 'LLVMRemarks', 'LLVMBitstreamReader', 'LLVMBinaryFormat', 'LLVMTableGen', 'LLVMSupport', 'LLVMDemangle']
  _deps += cpp.find_library(d, dirs : _search)
endforeach

dep_llvm = declare_dependency(
  include_directories : include_directories('/usr/x86_64-w64-mingw32/include'),
  dependencies : _deps,
  version : '16.0.0',
)

has_rtti = false
irbuilder_h = files('/usr/x86_64-w64-mingw32/include/llvm/IR/IRBuilder.h')
