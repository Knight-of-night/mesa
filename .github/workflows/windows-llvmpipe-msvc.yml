# Build for Windows

name: Windows-LLVMpipe-msvc

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  #push:
  #  branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CC: cl #clang #gcc
  CXX: cl #clang++ #g++
  #DESTDIR: D:/a/mesa/mesa/build/install

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  build-llvm:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
        with:
          repository: llvm/llvm-project

      - name: Configure
        run: |
          mkdir build
          cd build
          "C:\Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat" && cmake -G Ninja -DCMAKE_INSTALL_PREFIX=D:/a/mesa/mesa/build/install -DLLVM_ENABLE_RTTI=ON -DLLVM_ENABLE_PROJECTS="clang;libclc" -DLLVM_OPTIMIZED_TABLEGEN=TRUE -DCMAKE_BUILD_TYPE=Release -DLLVM_USE_CRT_RELEASE=MT ../llvm
        shell: cmd

      - name: Build
        run: |
          cd build
          "C:\Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat" && ninja -j 8
        shell: cmd

      - name: Install
        run: |
          cd build
          ninja install

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: llvm-builds
          path: build/install

  build-mesa:
    needs: build-llvm
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          echo Install dependencies...
          choco install winflexbison pkgconfiglite
          pip install meson mako

      - name: Download a Build Artifact
        uses: actions/download-artifact@v3.0.0
        with:
          # Artifact name
          name: llvm-builds
          path: llvm

      - name: Configure
        run: |
          set path=D:\a\mesa\mesa\llvm\bin;%path%
          mkdir build\install
          dir
          "C:\Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat" && meson -D gallium-drivers=swrast --buildtype=release build
        shell: cmd
        env:
          CXXFLAGS: /MT

      - name: Compile
        run: |
          "C:\Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat" && ninja -C build/
        shell: cmd

      - name: Install
        run: ninja -C build/ install
        env:
          DESTDIR: D:/a/mesa/mesa/build/install

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.0.0
        with:
          name: builds
          path: build/install
